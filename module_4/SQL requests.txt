Задание 4.1

База данных содержит список аэропортов практически всех крупных городов России. В большинстве городов есть только один аэропорт. Исключение составляет: 

SELECT a.city,
       count(a.airport_code) quant_airports
FROM dst_project.airports a
GROUP BY a.city
ORDER BY count(a.airport_code) DESC



Задание 4.2

Вопрос 1. Таблица рейсов содержит всю информацию о прошлых, текущих и запланированных рейсах. Сколько всего статусов для рейсов определено в таблице? 

SELECT count(distinct(f.status))
FROM dst_project.flights f


Вопрос 2. Какое количество самолетов находятся в воздухе на момент среза в базе (статус рейса «самолёт уже вылетел и находится в воздухе»). 

SELECT count(f.status)
FROM dst_project.flights f
WHERE f.status = 'Departed'


Вопрос 3. Места определяют схему салона каждой модели. Сколько мест имеет самолет модели  (Boeing 777-300)? 

SELECT count(distinct(s.seat_no))
FROM dst_project.seats s
JOIN dst_project.aircrafts a ON s.aircraft_code = a.aircraft_code
WHERE a.model = 'Boeing 777-300'


Вопрос 4. Сколько состоявшихся (фактических) рейсов было совершено между 1 апреля 2017 года и 1 сентября 2017 года? 

SELECT count(f.actual_arrival)
FROM dst_project.flights f
WHERE f.actual_arrival BETWEEN '2017-04-01 00:00:01' AND '2017-09-01 23:59:59'
  AND f.status!= 'Cancelled'



Задание 4.3

Вопрос 1. Сколько всего рейсов было отменено по данным базы? 

SELECT count(f.status)
FROM dst_project.flights f
WHERE f.status = 'Cancelled'


Вопрос 2. Сколько самолетов моделей типа Boeing, Sukhoi Superjet, Airbus находится в базе авиаперевозок? 

SELECT count(a.model),
       'Sukhoy' AS model_aircraft
FROM dst_project.aircrafts a
WHERE a.model like 'Suk%'
UNION
SELECT count(a.model),
       'Boeng'
FROM dst_project.aircrafts a
WHERE a.model like 'Boe%'
UNION
SELECT count(a.model),
       'Airbus'
FROM dst_project.aircrafts a
WHERE a.model like 'Air%' 


Вопрос 3. В какой части (частях) света находится больше аэропортов? 

SELECT 'Europe' AS world_region,
       count(a.timezone) AS total
FROM dst_project.airports a
WHERE a.timezone like 'Europe%'
UNION
SELECT 'Asia',
       count(a.timezone)
FROM dst_project.airports a
WHERE a.timezone like 'Asia%'


Вопрос 4. У какого рейса была самая большая задержка прибытия за все время сбора данных? Введите id рейса (flight_id). 

SELECT f.flight_id,
       extract(epoch FROM f.actual_arrival) - extract(epoch FROM f.scheduled_arrival) AS late_arrive -- перевод в секунды
FROM dst_project.flights f
WHERE f.actual_arrival IS NOT NULL
ORDER BY 2 DESC



Задание 4.4

Вопрос 1. Когда был запланирован самый первый вылет, сохраненный в базе данных? 

SELECT f.scheduled_departure
FROM dst_project.flights f
ORDER BY 1


Вопрос 2. Сколько минут составляет запланированное время полета в самом длительном рейсе? 

SELECT extract(epoch FROM f.scheduled_arrival)/60 - extract(epoch FROM f.scheduled_departure)/60 AS longest_flight_in_minutes
FROM dst_project.flights f
ORDER BY 1 DESC


Вопрос 3. Между какими аэропортами пролегает самый длительный по времени запланированный рейс?

SELECT f.departure_airport,
       f.arrival_airport,
       extract(epoch FROM f.scheduled_arrival)/60 - extract(epoch FROM f.scheduled_departure)/60 AS flight_in_minutes
FROM dst_project.flights f
ORDER BY flight_in_minutes DESC


Вопрос 4. Сколько составляет средняя дальность полета среди всех самолетов в минутах? Секунды округляются в меньшую сторону (отбрасываются до минут). 

SELECT avg((date_part('hour', actual_arrival - actual_departure) * 60 + date_part('minute', actual_arrival - actual_departure))::integer) AS mean_time_flight
FROM dst_project.flights f



Задание 4.5

Вопрос 1. Мест какого класса у SU9 больше всего? 

SELECT s.fare_conditions,
       count(s.fare_conditions)
FROM dst_project.seats s
WHERE aircraft_code = 'SU9'
GROUP BY s.fare_conditions


Вопрос 2. Какую самую минимальную стоимость составило бронирование за всю историю? 

SELECT min(b.total_amount)
FROM dst_project.bookings b


Вопрос 3. Какой номер места был у пассажира с id = 4313 788533? 

SELECT b.seat_no
FROM dst_project.boarding_passes b
JOIN dst_project.tickets t ON b.ticket_no = t.ticket_no
WHERE passenger_id = '4313 788533'



Задание 5.1
Вопрос 1. Анапа — курортный город на юге России. Сколько рейсов прибыло в Анапу за 2017 год? 

SELECT count(f.flight_id)
FROM dst_project.flights f
WHERE f.arrival_airport = 'AAQ'
  AND f.status = 'Arrived'
  AND f.actual_arrival BETWEEN '2017-01-01 00:00:00' AND '2018-01-01 00:00:00'


Вопрос 2. Сколько рейсов из Анапы вылетело зимой 2017 года? 

SELECT count(f.flight_id)
FROM dst_project.flights f
WHERE f.departure_airport = 'AAQ'
  AND f.actual_departure BETWEEN '2017-01-01 00:00:00' AND '2017-02-28 23:59:59' 
/* Декабрь 17-го включать в условие не буду, все равно его в таблице нет*/


Вопрос 3. Посчитайте количество отмененных рейсов из Анапы за все время. 

SELECT count(f.flight_id)
FROM dst_project.flights f
WHERE f.departure_airport = 'AAQ'
  AND f.status = 'Cancelled'

Вопрос 4. Сколько рейсов из Анапы не летают в Москву? 

SELECT count(DISTINCT (f.flight_id))
FROM dst_project.flights f
JOIN dst_project.airports a ON f.arrival_airport = a.airport_code
WHERE f.departure_airport = 'AAQ'
  AND a.city not like 'Moscow%'

Вопрос 5. Какая модель самолета летящего на рейсах из Анапы имеет больше всего мест? 

SELECT a.model,
       count(DISTINCT (s.seat_no))
FROM dst_project.flights f
JOIN dst_project.aircrafts a ON f.aircraft_code = a.aircraft_code
JOIN dst_project.seats s ON a.aircraft_code = s.aircraft_code
WHERE f.departure_airport = 'AAQ'
GROUP BY a.model

Запрос для получения датасета с информацией о полетах из Анапы зимой 2017 года.

Заранее извиняюсь за этого монстра, что ждет вас внизу. Он огромный и страшный, но работает (не быстро, запрос в метабэйз занимает порядка 10(!) мин). 
Вообще он мог быть еще больше, в два раза, если б я решил цену на топливо взять не только январскую для всего периода, а январскую и февральскую для января и февраля 
соответственно. Вообще на свой вкус и учитывая, что я со своим слабым скиллом не могу сделать красиво и оптимально, я бы сделал несколько запросов поменьше, 
а потом с несколькими csv-файлами в пандасе попробовал бы поработать, но по условию проекта надо сделать какой-то вывод об эффективности полетов именно по результатам 
единственного запроса, посему все так как есть.  

Кратко по колонкам в получившемся датасеате:
flight_id - ID полета;
flight_no - Номер рейса;
actual_departure - Дата и время вылета из аэропорта убытия;
actual_arrival - Дата и время прилета в аэропорта назначения;
flight_in_hours - Время полета в часах;
departure_city - Город отлета;
arrival_city - Город прилета;
aircraft_code - Шифр модели самолета;
model - Модель самолета;
range - Расчетная дальность полета самолета;
total_seats - Количество мест в самолете;
total_fillment - Заполняемость мест на конкретном рейсе;
business_class - Количество мест в бизнес-классе;
business_fillment - Заполняемость мест в бизнес-классе;
economy_class - Количество мест в эконом-классе;
economy_fillment - Заполняемость мест в эконом-классе;
businesst_amount - Сумма вырученная от продажи билетов бизнес-класса на рейс;
total_flight_amount - Общая сумма вырученная от продажи билетов на рейс;
cost_of_flight - Затраты на топливо для одного рейса.

/* Запрос для верхней части таблицы (Боинг 737-300)*/

SELECT f.flight_id,
       f. flight_no,
       f.actual_departure,
       f.actual_arrival,
       (extract(epoch FROM f.actual_arrival)/3600 - extract(epoch FROM f.actual_departure)/3600)::numeric AS flight_in_hours,                                             
       ap.city departure_city,
       ap1.city arrival_city,
       f.aircraft_code,
       air.model,
       air.range,

  (SELECT count(*)
   FROM dst_project.seats s
   WHERE s.aircraft_code = air.aircraft_code ) AS total_seats,

  (SELECT count(tf.fare_conditions)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f.flight_id ) AS total_fillment,

  (SELECT count(*)
   FROM dst_project.seats s
   WHERE s.aircraft_code = air.aircraft_code
     AND s.fare_conditions = 'Business' ) AS business_class,

  (SELECT count(tf.fare_conditions)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f.flight_id
     AND tf.fare_conditions = 'Business' ) AS business_fillment,

  (SELECT count(*)
   FROM dst_project.seats s
   WHERE s.aircraft_code = air.aircraft_code
     AND s.fare_conditions = 'Economy' ) AS economy_class,

  (SELECT count(tf.fare_conditions)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f.flight_id
     AND tf.fare_conditions = 'Economy' ) AS economy_fillment,
  
  (SELECT sum(tf.amount)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f.flight_id 
     AND tf.fare_conditions = 'Business' ) AS businesst_amount,
  
  (SELECT sum(tf.amount)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f.flight_id ) AS total_flight_amount,

/* 41435 руб/т Стоимость топлива в начале 2017 года в аэропорту Анапы;
   2.4 т/ч Удельный расход топлива Боинга 737-300*/

       2.4*((extract(epoch FROM f.actual_arrival)/3600 - extract(epoch FROM f.actual_departure)/3600)::numeric)*41435 AS cost_of_flight
FROM dst_project.flights f
LEFT JOIN dst_project.aircrafts air ON f.aircraft_code = air.aircraft_code
LEFT JOIN dst_project.airports ap ON f.departure_airport = ap.airport_code
LEFT JOIN dst_project.airports ap1 ON f.arrival_airport = ap1.airport_code
WHERE f.departure_airport = 'AAQ'
  AND (date_trunc('month', f.scheduled_departure) in ('2017-01-01',
                                                      '2017-02-01',
                                                      '2017-12-01'))
  AND f.status not in ('Cancelled')
  AND air.aircraft_code = '733'
UNION

/* Запрос для нижней части таблицы ( Сухой SSJ-100)*/

SELECT f2.flight_id,
       f2. flight_no,
       f2.actual_departure,
       f2.actual_arrival,
       (extract(epoch FROM f2.actual_arrival)/3600 - extract(epoch FROM f2.actual_departure)/3600)::numeric AS flight_in_hours,
       ap.city departure_city,
       ap1.city arrival_city,
       f2.aircraft_code,
       air.model,
       air.range,

  (SELECT count(*)
   FROM dst_project.seats s
   WHERE s.aircraft_code = air.aircraft_code ) AS total_seats,

  (SELECT count(tf.fare_conditions)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f2.flight_id ) AS total_fillment,

  (SELECT count(*)
   FROM dst_project.seats s
   WHERE s.aircraft_code = air.aircraft_code
     AND s.fare_conditions = 'Business' ) AS business_class,

  (SELECT count(tf.fare_conditions)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f2.flight_id
     AND tf.fare_conditions = 'Business' ) AS business_fillment,

  (SELECT count(*)
   FROM dst_project.seats s
   WHERE s.aircraft_code = air.aircraft_code
     AND s.fare_conditions = 'Economy' ) AS economy_class,

  (SELECT count(tf.fare_conditions)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f2.flight_id
     AND tf.fare_conditions = 'Economy' ) AS economy_fillment,

  (SELECT sum(tf.amount)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f2.flight_id 
     AND tf.fare_conditions = 'Business' ) AS businesst_amount,
  
  (SELECT sum(tf.amount)
   FROM dst_project.ticket_flights tf
   WHERE tf.flight_id = f2.flight_id ) AS total_flight_amount,

/* 41435 руб/т Стоимость топлива в начале 2017 года в аэропорту Анапы;
   1.7 т/ч Удельный расход топлива Сухой SSJ-100*/

       1.7*((extract(epoch FROM f2.actual_arrival)/3600 - extract(epoch FROM f2.actual_departure)/3600)::numeric)*41435
FROM dst_project.flights f2
LEFT JOIN dst_project.aircrafts air ON f2.aircraft_code = air.aircraft_code
LEFT JOIN dst_project.airports ap ON f2.departure_airport = ap.airport_code
LEFT JOIN dst_project.airports ap1 ON f2.arrival_airport = ap1.airport_code
WHERE f2.departure_airport = 'AAQ'
  AND (date_trunc('month', f2.scheduled_departure) in ('2017-01-01',
                                                       '2017-02-01',
                                                       '2017-12-01'))
  AND f2.status not in ('Cancelled')
  AND air.aircraft_code = 'SU9'
ORDER BY 2, 3